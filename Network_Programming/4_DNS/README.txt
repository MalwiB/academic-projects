http://users.uj.edu.pl/~palacz/edu/201617-PS/index.html


4. Korzystanie z us³ugi DNS

Termin oddania finalnej wersji rozwi¹zania: 2017-04-24. Dowolny jêzyk programowania. Nawi¹zuje do poprzedniego zadania, wiêc czêœæ z Pañstwa pewnie zmodyfikuje poprzednio napisane programy — jest to jak najbardziej OK.
Numeryczne adresy serwerów DNS u¿yte w poprzednim zadaniu nie wziê³y siê z powietrza, lecz zosta³y wyszukane w DNS. Przechowywanie odwzorowañ z nazwy serwera na jego numeryczny adres i z adresu na nazwê jest najszerzej znanym zastosowaniem DNS, ale nie jedynym. DNS potrafi przechowywaæ wiele innych typów informacji. Uruchom nastêpuj¹ce polecenie aby zobaczyæ wszystkie dane zwi¹zane z nazw¹ „uj.edu.pl”:
dig uj.edu.pl any
Wœród wyœwietlonych wyników powinny byæ dwa rekordy typu MX (mail exchange). Zawieraj¹ one nazwy serwerów odbieraj¹cych pocztê przychodz¹c¹ do tej domeny — to z którymœ z nich nale¿y siê po³¹czyæ gdy chcemy wys³aæ list na adres koñcz¹cy siê na „@uj.edu.pl”. Aby móc to zrobiæ trzeba w DNS wyszukaæ rekordy typu A zwi¹zane z nazwami tych serwerów, tam znajdziemy potrzebne nam adresy IPv4.
W poprzednim zadaniu poznaliœcie Pañstwo zasady prowadzenia dialogu z serwerem SMTP. Jednym z u¿ywanych poleceñ by³o „RCPT TO”, serwer odpowiada na nie kodem 250 jeœli jest gotów zaakceptowaæ list przeznaczony dla danego odbiorcy. Serwer mo¿e te¿ odpowiedzieæ kodem b³êdu, jeœli np. w nazwie odbiorcy jest literówka lub konto pocztowe zosta³o skasowane. Mo¿na to wykorzystaæ do weryfikacji poprawnoœci adresów pocztowych.
Proszê napisaæ program, któremu jako argumenty podaje siê pewn¹ liczbê adresów e-mailowych. Program dla ka¿dego z nich powinien znajdowaæ serwer pocztowy odpowiedzialny za dan¹ domenê, ³¹czyæ siê z nim, i rozpoczynaæ procedurê wysy³ki listu ale tylko do momentu uzyskania odpowiedzi na „RCPT TO”, nastêpnie zamiast „DATA” nale¿y wys³aæ „QUIT” i zamkn¹æ po³¹czenie. W zale¿noœci od zwróconego kodu nale¿y wypisaæ na ekran odpowiedni komunikat, oznajmiaj¹cy ¿e adres wydaje siê byæ OK albo ¿e adres zosta³ odrzucony.
Przyk³adow¹ implementacjê procedury wyszukuj¹cej w DNS potrzebne informacje znajdziecie Pañstwo w plikach find_mx.h, find_mx.c i demo_mx.cpp. Jest doœæ obszernie okomentowana, zapraszam do jej przestudiowania. Mo¿ecie wykorzystaæ j¹ w swoim programie, albo bezpoœrednio odwo³uj¹c siê do funkcji find_mail_exchanges, albo (jeœli piszecie w czymœ innym ni¿ C/C++, np. w Perlu b¹dŸ Pythonie) wywo³uj¹c program demo_mx z odpowiednim argumentem i przechwytuj¹c wyniki, które normalnie zosta³yby wypisane na ekran.
Mo¿na te¿ oczywiœcie napisaæ swój w³asny kod znajduj¹cy MX-y. W sieci dostêpnych jest wiele bibliotek wspomagaj¹cych komunikacjê z DNS, od bardzo prostych do bardzo skomplikowanych. Mo¿ecie wybraæ któr¹œ z nich, choæ zwracam uwagê ¿e raczej nie bêdzie ona zainstalowana na komputerach w pracowni i trzeba bêdzie samodzielnie j¹ œci¹gn¹æ oraz w jakiœ sposób do³¹czyæ do programu.