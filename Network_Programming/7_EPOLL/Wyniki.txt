	Waiting for events...
Connected with client 5.
	Waiting for events...
Receiving data from client 5: 50 bits received.
	Waiting for events...
Connected with client 6.
	Waiting for events...
Receiving data from client 6: 20 bits received.
	Waiting for events...
Connected with client 7.
	Waiting for events...
Receiving data from client 7: 10 bits received.
	Waiting for events...
Receiving data from client 6: 20 bits received.
	Waiting for events...
Receiving data from client 7: 10 bits received.
	Waiting for events...
Receiving data from client 6: 20 bits received.
	Waiting for events...
Receiving data from client 7: 10 bits received.
	Waiting for events...
Receiving data from client 5: 50 bits received.
	Waiting for events...
	Waiting for events...
	Waiting for events...
Receiving data from client 5: 50 bits received.
	Waiting for events...
	Waiting for events...



KOMENTARZ:
W przypadku uzycia zwyklego serwera z gniazdami blokujacymi (takie sa ustawione domyslnie), mozna odbierac jednoczesnie dane tylko od jednego klienta, dopoki nie zakonczy polaczenia.
Gdy uzywane sa gniazda nie blokujace, gwarantuje to, ze program nie bÄ™dzie czekal bezsensownie az jeden klient zakonczy wysylanie danych i zamknie polaczenie, tylko moze przelaczyc sie i odebrac w tym czasie dane od innego klienta.
System wydarzen, ktory tworzy funkcja epoll pomaga w kontrolowaniu otrzymywania kolejnych polaczen i danych.

W przykladzie dzialania powyzej widac, jak klient 5 laczy sie z serwerem i wysyla dane (przychodzace wydarzenie), lecz nastepuje 8 sekundowa przerwa miedzy kolejnymi porcjami danych, co wykorzystuje serwer na polaczenie sie i odebranie danych od klienta numer 6 i 7 (nastepne przychodzace wydarzenia).

